#!/bin/sh

set -x
set -e
set -u

[ -n "${DEBEMAIL:-}" ] || DEBEMAIL="jenkins.grml.org Autobuilder <jenkins@grml.org>"
export DEBEMAIL

if [ ! -d source ] ; then
  echo "Please run the script in the jenkins workspace." >&2
  exit 1
fi

if [ -z "${BUILD_NUMBER:-}" ] ; then
  echo "No BUILD_NUMBER defined, please run it in jenkins." >&2
  exit 1
fi

if ! [ -x "$(which svn2cl)" ] ; then
  echo "Error: svn2cl not available, please install subversion-tools." >&2
  exit 1
fi

if ! [ -x "$(which svn)" ] ; then
  echo "Error: svn not available, please install subversion." >&2
  exit 1
fi

if ! [ -x "$(which dpkg-parsechangelog)" ] ; then
  echo "Error: dpkg-parsechangelog not available, please install dpkg-dev." >&2
  exit 1
fi

echo "***  source package build phase ***"
rm -f ./* || true

cd source

SINCE_REVISION=$(svn blame debian/changelog 2>/dev/null | head -1 | awk '{print $1}')

if [ -z "${SINCE_REVISION:-}" ] ; then
  echo "Error: could not detect svn revision which modified debian/changelog." >&2
  exit 1
fi

# package name
PACKAGE=$(dpkg-parsechangelog --count 1 | awk '/^Source: / {print $2}')

# get newest version number from changelog
PREVIOUS_VERSION=$(dpkg-parsechangelog --count 1 | awk '/^Version: / {print $2}')

# calculate new snapshot version
SNAPSHOT_VERSION="$(increase-version-number "$PREVIOUS_VERSION")~${BUILD_NUMBER}.svn${SINCE_REVISION}"

## generate changelog
SVN_CHANGELOG=$(mktemp)
svn2cl --reparagraph --stdout --include-rev -r HEAD:$SINCE_REVISION | sed -n '/^.*\[r/,/^$/p' > $SVN_CHANGELOG
# shorten tabs at beginning of lines
sed -i 's/\t/  /' $SVN_CHANGELOG

cat > debian/changelog.new << EOF
$PACKAGE ($SNAPSHOT_VERSION) unstable; urgency=low

  ** SNAPSHOT build **

EOF

cat $SVN_CHANGELOG >> debian/changelog.new

cat >> debian/changelog.new << EOF
 -- $DEBEMAIL  $(date -u -R)

EOF

# append original changelog
cat debian/changelog >> debian/changelog.new

# finally install new changelog
mv debian/changelog.new debian/changelog
rm -f "$SVN_CHANGELOG"

cd ..
dpkg-source --tar-ignore=\.svn -b source

# revert to original debian/changelog to avoid highly increasing version numbers with each build
( cd source ; svn revert debian/changelog )

# needed for deploying artifacts
mkdir -p ${JENKINS_HOME}/userContent/${JOB_NAME}/
